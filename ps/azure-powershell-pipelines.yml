# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
# - script: echo Hello, world!
#   displayName: 'Run a one-line script'

# - powershell: gci env:* | sort-object name | Format-Table -AutoSize | Out-File $env:BUILD_ARTIFACTSTAGINGDIRECTORY/environment-variables.txt
#- script: echo $(System.DefaultWorkingDirectory)
# - task: PublishBuildArtifacts@1
#   inputs:
#     pathToPublish: '$(Build.ArtifactStagingDirectory)'
#     artifactName: drop
# - task: PublishBuildArtifacts@1
#   inputs:
#     pathToPublish: '$(Build.ArtifactStagingDirectory)'
#     artifactName: drop2
# - task: CopyFiles@2
#   inputs:
#     sourceFolder:  '$(Build.SourcesDirectory)'
#     contents: '**' 
#     targetFolder: '$(Build.ArtifactStagingDirectory)'
# - powershell: gci .\ | sort-object name | Format-Table -AutoSize | Out-File $env:BUILD_ARTIFACTSTAGINGDIRECTORY/environment-variables.txt


- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Write your PowerShell commands here.
      
      Write-Host $(System.DefaultWorkingDirectory)
      Write-Host $(Build.ArtifactStagingDirectory)
      Write-Host "$env:SYSTEM_ACCESSTOKEN = $(System.AccessToken)"
      Write-Host $(Pipeline.Workspace)
# - task: PowerShell@2
#   inputs:
#     filePath: '/ps/helloworld.ps1'
- powershell: gci .\ 
#| sort-object name | Format-Table -AutoSize | Out-File $env:BUILD_ARTIFACTSTAGINGDIRECTORY/environment-variables.txt
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: drop
