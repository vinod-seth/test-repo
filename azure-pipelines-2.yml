# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

parameters:
- name: image
  displayName: 'Pool image'
  default: ubuntu-latest
  values:
  - windows-latest
  - vs2017-win2016
  - ubuntu-latest
  - ubuntu-16.04
  - macOS-latest
  - macOS-10.14
- name: test
  displayName: Run Tests?
  type: boolean
  default: true

variables:
- group: testgroup
- name: my-passed-variable
  value: $[variables.test] 
pool:
  vmImage: ubuntu-latest

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Write your PowerShell commands here.
      
      Write-Host $(System.DefaultWorkingDirectory)
      Write-Host $(Build.ArtifactStagingDirectory)
      Write-Host "$env:SYSTEM_ACCESSTOKEN = $(System.AccessToken)"
      Write-Host $(Pipeline.Workspace)
      Write-Host $(my-passed-variable)
      Write-Host $(test)
- script: |
    echo "Hello, world!"
    echo "Pool image: ${{ parameters.image }}"
    echo "Run tests? ${{ parameters.test }}"
  displayName: 'Show runtime parameter values'

- bash: echo This script could use $SYSTEM_ACCESSTOKEN
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)
- powershell: | 
    Write-Host "This is a script that could use $env:SYSTEM_ACCESSTOKEN"
    Write-Host "$env:SYSTEM_ACCESSTOKEN = $(System.AccessToken)"
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)
- script: echo building $(Build.BuildNumber) with ${{ parameters.image }}
- script: echo building $(Build.BuildNumber)
##############################################################
#Use conditionals with parameters
##############################################################
- ${{ if eq(parameters.test, true) }}:
    - script: echo "Running all the tests"